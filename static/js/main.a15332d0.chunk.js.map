{"version":3,"sources":["components/SearchBar.js","components/NavBar.js","api/weather.js","components/MoreInfo.js","App.js","index.js"],"names":["SearchBar","term","onInputChange","onInputSubmit","className","onSubmit","type","onChange","value","NavBar","weatherData","data","city","name","axios","create","baseURL","MoreInfo","selected","open","setOpen","time","obj","hours","Date","dt_txt","getHours","style","float","onClick","map","weather","description","main","temp_min","temp_max","wind","speed","humidity","dt","App","useState","lat","setLat","long","setLong","setTerm","setWeatherData","setSelected","config","apiKey","process","console","log","getWeather","a","get","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","position","coords","latitude","longitude","e","target","preventDefault","res","array","list","day","getDate","filteredDays","filter","Day","j","indexOf","today","day1","tomorrow","day2","thirdDay","day3","fourthDay","day4","fifthDay","day5","sixthDay","day6","cloudy","id","rainy","arr","Array","isArray","weatherDisplay","temp","feels_like","date","getDay","onClicked","renderWeather","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a15332d0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/SearchBar.css\";\r\n\r\nfunction SearchBar({ term, onInputChange, onInputSubmit }) {\r\n  return (\r\n    <div className=\"search\">\r\n      <form onSubmit={onInputSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={onInputChange}\r\n          value={term}\r\n          className=\"location_input\"\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"../css/NavBar.css\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nfunction NavBar({ term, onInputChange, onInputSubmit, weatherData }) {\r\n  const place = () => {\r\n    if (weatherData) {\r\n      return weatherData.data.city.name;\r\n    }\r\n    return \"\";\r\n  };\r\n  return (\r\n    <div className=\"nav_bar\">\r\n      <div>\r\n        <SearchBar\r\n          term={term}\r\n          onInputChange={onInputChange}\r\n          onInputSubmit={onInputSubmit}\r\n        />\r\n      </div>\r\n      <div className=\"place\">{` Place : ${place()} `}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default NavBar;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.openweathermap.org/data\",\r\n});\r\n","import React from \"react\";\r\nimport \"../css/MoreInfo.css\";\r\n\r\nfunction MoreInfo({ selected, open, setOpen }) {\r\n  const time = (obj) => {\r\n    let hours = new Date(obj.dt_txt).getHours();\r\n    let time = hours > 12 ? hours - 12 + \":00 P.M\" : hours + \":00 A.M\";\r\n    return time;\r\n  };\r\n\r\n  const weatherList = () => {\r\n    return selected.map((obj) => {\r\n      return (\r\n        <div className=\"container\" key={obj.dt}>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>{obj.weather[0].description}</td>\r\n                <td>\r\n                  <div>{time(obj)}</div>\r\n                </td>\r\n                <td>\r\n                  <div>{obj.main.temp_min}°C</div>\r\n                </td>\r\n                <td>{obj.main.temp_max}°C</td>\r\n                <td>\r\n                  <div>{obj.wind.speed}m/s</div>\r\n                </td>\r\n                <td>\r\n                  <div>{obj.main.humidity}%</div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"heading\">\r\n        <h5>weather</h5>\r\n        <h5>time</h5>\r\n        <h5>min temp</h5>\r\n        <h5>max temp</h5>\r\n        <h5>wind speed</h5>\r\n        <h5>humidity</h5>\r\n        <div style={{ float: \"right\" }}>\r\n          <i className=\"material-icons\" onClick={() => setOpen(!open)}>\r\n            close\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n      {weatherList()}\r\n    </div>\r\n  );\r\n}\r\nexport default MoreInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport weather from \"./api/weather\";\r\nimport MoreInfo from \"./components/MoreInfo\";\r\nimport { config } from \"dotenv\";\r\nimport \"./css/App.css\";\r\nfunction App() {\r\n  let [lat, setLat] = useState(\"\");\r\n  let [long, setLong] = useState(\"\");\r\n  let [term, setTerm] = useState(\"\");\r\n  let [weatherData, setWeatherData] = useState(null);\r\n  let [open, setOpen] = useState(false);\r\n  let [selected, setSelected] = useState([]);\r\n  config();\r\n  const apiKey = process.env.REACT_APP_API_KEY;\r\n  console.log(\"key\", apiKey);\r\n  const getPosition = () => {\r\n    return new Promise((resolve, reject) =>\r\n      navigator.geolocation.getCurrentPosition(resolve, reject)\r\n    );\r\n  };\r\n  const getWeather = async (lat, long) => {\r\n    let data = await weather.get(\r\n      `/2.5/forecast?lat=${lat}&lon=${long}&cnt=40&appid=${apiKey}&units=metric`\r\n    );\r\n    setWeatherData(data);\r\n  };\r\n  const onInputChange = (e) => {\r\n    setTerm(e.target.value);\r\n  };\r\n  const onInputSubmit = (e) => {\r\n    e.preventDefault();\r\n    weather\r\n      .get(`/2.5/forecast?q=${term}&cnt=40&appid=${apiKey}&units=metric`)\r\n      .then((res) => setWeatherData(res));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosition().then((position) => {\r\n      setLat(position.coords.latitude);\r\n      setLong(position.coords.longitude);\r\n    });\r\n  }, [term]);\r\n\r\n  useEffect(() => {\r\n    if (lat !== \"\" && long !== \"\") {\r\n      getWeather(lat, long);\r\n    }\r\n  }, [lat, long, term]);\r\n\r\n  const renderWeather = () => {\r\n    if (weatherData == null) {\r\n      return \"\";\r\n    } else {\r\n      let data = weatherData.data;\r\n      let array = data.list.map((day) => {\r\n        let d = new Date(day.dt_txt);\r\n        let date = d.getDate();\r\n        return date;\r\n      });\r\n      let filteredDays = array.filter((Day, j) => j === array.indexOf(Day));\r\n      let today = data.list.filter((day1) => {\r\n        let d1 = new Date(day1.dt_txt);\r\n        let date1 = d1.getDate();\r\n        return date1 === filteredDays[0];\r\n      });\r\n      let tomorrow = data.list.filter((day2) => {\r\n        let d2 = new Date(day2.dt_txt);\r\n        let date2 = d2.getDate();\r\n        return date2 === filteredDays[1];\r\n      });\r\n      let thirdDay = data.list.filter((day3) => {\r\n        let d3 = new Date(day3.dt_txt);\r\n        let date3 = d3.getDate();\r\n        return date3 === filteredDays[2];\r\n      });\r\n      let fourthDay = data.list.filter((day4) => {\r\n        let d4 = new Date(day4.dt_txt);\r\n        let date4 = d4.getDate();\r\n        return date4 === filteredDays[3];\r\n      });\r\n      let fifthDay = data.list.filter((day5) => {\r\n        let d5 = new Date(day5.dt_txt);\r\n        let date5 = d5.getDate();\r\n        return date5 === filteredDays[4];\r\n      });\r\n      let sixthDay = data.list.filter((day6) => {\r\n        let d6 = new Date(day6.dt_txt);\r\n        let date6 = d6.getDate();\r\n        return date6 === filteredDays[5];\r\n      });\r\n      let cloudy = () => {\r\n        return (\r\n          <div>\r\n            <i id=\"sun\" className=\"material-icons\">\r\n              light_mode\r\n            </i>\r\n            <i id=\"clouds\" className=\"material-icons\">\r\n              clouds\r\n            </i>\r\n          </div>\r\n        );\r\n      };\r\n      let sunny = () => {\r\n        return (\r\n          <div>\r\n            <i id=\"sun\" className=\"material-icons\">\r\n              light_mode\r\n            </i>\r\n          </div>\r\n        );\r\n      };\r\n      let overCastClouds = () => {\r\n        return (\r\n          <div className=\"over_cast_clouds\">\r\n            <i id=\"clouds\" className=\"material-icons\">\r\n              clouds\r\n            </i>\r\n          </div>\r\n        );\r\n      };\r\n      let rainy = () => {\r\n        return (\r\n          <div>\r\n            <i id=\"sun\" className=\"material-icons\">\r\n              light_mode\r\n            </i>\r\n            <i id=\"clouds\" className=\"material-icons\">\r\n              clouds\r\n            </i>\r\n            <i id=\"water\" className=\"material-icons\">\r\n              grain\r\n            </i>\r\n          </div>\r\n        );\r\n      };\r\n      const weather = (arr) => {\r\n        let description;\r\n        if (Array.isArray(arr)) {\r\n          description = arr[1].weather[0].description;\r\n        } else {\r\n          description = arr.weather[0].description;\r\n        }\r\n        switch (description) {\r\n          case \"cloudy\":\r\n            return cloudy();\r\n          case \"overcast clouds\":\r\n            return overCastClouds();\r\n          case \"rainy\":\r\n            return rainy();\r\n          case \"moderate rain\":\r\n            return rainy();\r\n          case \"light rain\":\r\n            return rainy();\r\n          case \"sunny\":\r\n            return sunny();\r\n          case \"broken clouds\":\r\n            return cloudy();\r\n          case \"scattered clouds\":\r\n            return cloudy();\r\n          default:\r\n            return \"\";\r\n        }\r\n      };\r\n      const weatherDisplay = (arr, day) => {\r\n        return (\r\n          <div className=\"content_align\">\r\n            <div className=\"day_name\">{day}</div>\r\n            <p className=\"weather\">{arr[1].weather[0].description}</p>\r\n            {weather(arr)}\r\n            <i id=\"thermostat\" className=\"material-icons\">\r\n              thermostat\r\n            </i>\r\n            {arr[1].main.temp}°C\r\n            <p className=\"real_temp\">Real feel:{arr[1].main.feels_like}°C</p>\r\n          </div>\r\n        );\r\n      };\r\n\r\n      let date = (array) => {\r\n        let date = new Date(array[0].dt_txt);\r\n        let days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THUR\", \"FRI\", \"SAT\"];\r\n        let day = date.getDay();\r\n        return days[day];\r\n      };\r\n\r\n      let onClicked = (arr) => {\r\n        setOpen(!open);\r\n        setSelected(arr);\r\n      };\r\n      return (\r\n        <div className=\"weather_container\">\r\n          <div className=\"display\" onClick={() => onClicked(today)}>\r\n            {weatherDisplay(today, date(today))}\r\n          </div>\r\n          <div className=\"display\" onClick={() => onClicked(tomorrow)}>\r\n            {weatherDisplay(tomorrow, date(tomorrow))}\r\n          </div>\r\n          <div className=\"display\" onClick={() => onClicked(thirdDay)}>\r\n            {weatherDisplay(thirdDay, date(thirdDay))}\r\n          </div>\r\n          <div className=\"display\" onClick={() => onClicked(fourthDay)}>\r\n            {weatherDisplay(fourthDay, date(fourthDay))}\r\n          </div>\r\n          <div className=\"display\" onClick={() => onClicked(fifthDay)}>\r\n            {weatherDisplay(fifthDay, date(fifthDay))}\r\n          </div>\r\n          <div className=\"display\" onClick={() => onClicked(sixthDay)}>\r\n            {weatherDisplay(sixthDay, date(sixthDay))}\r\n          </div>\r\n          {console.log(weatherData)}\r\n          {console.log(today)}\r\n\r\n          {console.log(\"process\", process.env.REACT_APP_API_KEY)}\r\n          <div className={open ? \"more_info_open\" : \"more_info_close\"}>\r\n            <MoreInfo selected={selected} open={open} setOpen={setOpen} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"main_div\">\r\n      <NavBar\r\n        term={term}\r\n        onInputChange={onInputChange}\r\n        onInputSubmit={onInputSubmit}\r\n        weatherData={weatherData}\r\n      />\r\n      {renderWeather()}\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}